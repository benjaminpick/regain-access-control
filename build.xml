<?xml version="1.0"?>
<project name="regain-access-control" default="targets" basedir=".">
<!--
 | regain/ACL - Implement SearchAccessController/CrawlerAccessController for regain (User/Group via URL)
 | Copyright (C) 2012 Come_IN Computerclubs (University of Siegen)
 |
 | This library is free software; you can redistribute it and/or
 | modify it under the terms of the GNU Lesser General Public
 | License as published by the Free Software Foundation; either
 | version 2.1 of the License, or (at your option) any later version.
 |
 | This library is distributed in the hope that it will be useful,
 | but WITHOUT ANY WARRANTY; without even the implied warranty of
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 | Lesser General Public License for more details.
 |
 | You should have received a copy of the GNU Lesser General Public
 | License along with this library; if not, write to the Free Software
 | Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 |
 | Contact: Come_IN-Team <come_in-team@listserv.uni-siegen.de>
 +-->
  <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpath="lib/ant/xmltask.jar" />

  <!--
   | The properties and paths
   +-->
  <property file="build.properties"/>
  <property environment="env"/>
  <!-- set if java.dir not set in build.properties -->
  <property name="java.dir" value="${env.JAVA_HOME}" />
  <condition property="java_dir_empty">
  	<or>
  		<length string="${java.dir}" length="0" />
  		<equals arg1="${java.dir}" arg2="$${env.JAVA_HOME}" />
  		<not>
  		  <isset property="java.dir" />
  		</not>
  	</or>
  </condition>

  <path id="sourcepath">
    <pathelement location="src"/>
  </path>
  <path id="classpath" cache="true">
    <pathelement location="build/classes"/>
  	<pathelement location="${regain-location}/build/classes"/>
  	<pathelement location="${regain-location}/build/included-lib-classes/common"/>
  	<fileset dir="lib">
  	  <include name="*.jar" />
  	</fileset>
  </path>
  <property name="pluginname.file" value="AccessController.jar"/>
  <property name="crawlerpluginname.file" value="AdditionalFieldsDatabasePlugin.jar" />

  <!-- Autodetect the platform -->
  <condition property="platform" value="linux">
    <os family="unix"/>
  </condition>
  <condition property="platform" value="win">
    <os family="windows"/>
  </condition>

  <target name="targets">
	<echo message="ant target" />
	<echo message="" />
  	<echo message="available targets:"/>
  	<echo message="  targets              Shows this list of targets."/>
  	<echo message="  dump-info            Dumps some information (VM-Version...)."/>
   	<echo message="  clean                Deletes the classes directory."/>
   	<echo message="  make                 Compiles the source code."/>
   	<echo message="  package              Packages the thumbnailer lib as standalone library." />
    <echo message="  all                  Creates all."/>
  </target>
	
  <!--
   | Dump some information.
   +-->
  <target name="dump-info">
    <echo message="java.dir=${java.dir}" />
    <echo message="JAVA_HOME=${env.JAVA_HOME}" />
    <echo message="java.vm.info=${java.vm.info}" />
    <echo message="java.vm.name=${java.vm.name}" />
    <echo message="java.vm.vendor=${java.vm.vendor}" />
    <echo message="java.vm.version=${java.vm.version}" />
    <echo message="os.arch=${os.arch}" />
    <echo message="os.name=${os.name}" />
    <echo message="os.version=${os.version}" />
    <echo message="file.encoding=${file.encoding}" />
    <echo message="user.language=${user.language}" />
  </target>
  
  <!--
   | Prepares the compilation. (Extracts the libs)
   +-->
  <target name="prepare">
    <echo message="Extracting the lib jars ..." />
    <delete dir="build/included-lib-classes"/>
    <mkdir dir="build/included-lib-classes"/>
    <unjar dest="build/included-lib-classes">
      <fileset dir="lib">
        <include name="*.jar"/>
      </fileset>
    </unjar>
  </target>
  
  <!--
   | Prepares the compilation. (Extracts the libs)
   | Does nothing if the libs were already extracted.
   +-->
  <target name="prepare-once" depends="-check-prepare, -prepare-if-needed"/>
  <target name="-check-prepare">
    <condition property="included-lib-classes.missing">
      <not>
        <available file="build/included-lib-classes" type="dir"/>
      </not>
    </condition>
  </target>
  <target name="-prepare-if-needed" if="included-lib-classes.missing">
    <antcall target="prepare"/>
  </target>

  <!--
   | Deletes the classes directory.
   +-->
  <target name="clean">
    <delete dir="build/classes"/>
    <delete dir="build/included-lib-classes"/>
  </target>
  
  <!--
   | Compiles the source code.
   +-->
  <target name="make" depends="prepare-once">
    <echo message="Making sure everything is prepared at regain ..." />
  	<ant dir="${regain-location}" useNativeBasedir="true" inheritAll="false">
  		<target name="prepare-once"/>
  		<target name="make"/>
  	</ant>
  	<echo message="Compiling regain plugin ... (Regain is in ${regain-location})" />
    <fail if="java_dir_empty">
  		Neither 'java.dir' nor JAVA_HOME is set, so no compiling is possible. Please copy build.properties.sample to build.properties and edit its values.
  	</fail>
    <mkdir dir="build/classes"/>
    <javac destdir="build/classes"
           debug="${debug}"
           deprecation="true"
           executable="${java.dir}/bin/javac"
           source="1.5"
           target="1.5"
           fork="true"
           includeantruntime="false">
      <compilerarg value="-Xlint"/>
      <src>
        <path refid="sourcepath"/>
      </src>
      <classpath>
        <path refid="classpath"/>
      </classpath>
    </javac>
  </target>
  
  <!--
   | Packages the acl as a plugin for regain
   +-->
  <target name="package" depends="make">
    <echo message="Creating ${pluginname.file} ..." />
    <fileset id="classes" dir="build/classes" />
    <fileset id="libs"    dir="build/included-lib-classes" />
    
    <jar jarfile="build/${pluginname.file}"
         compress="false"
         index="true">
      <fileset refid="classes"/>
      <fileset refid="libs"/>
    </jar>
   </target>
   
  <target name="package-crawlerplugin" depends="make">
    <echo message="Creating ${crawlerpluginname.file} ..." />
    <fileset id="classes" dir="build/classes" />
    <fileset id="libs"    dir="build/included-lib-classes" />
    
    <jar jarfile="build/${crawlerpluginname.file}"
         compress="false"
         index="true">
      <manifest>
        <attribute name="Plugin-Class" value="de.uni_siegen.wineme.come_in.fetch.AdditionalFieldsDatabasePlugin"/>
      </manifest>
      
      <fileset refid="classes"/>
      <fileset refid="libs"/>
    </jar>
   </target>
   
  
   
  <!--
   | Creates all.
   +-->
  <target name="all" depends="package, package-crawlerplugin">
  </target>
  
  <!--
   | Install plugin
   | Params:
   ${install} - Path to install the plugin in.
   -->
  <target name="-install-plugin">
      <echo message="Installing this plugin to ${install}..." />
   	  <available property="install.available" file="${install}" />
   	  <fail unless="install.available" message="Folder not found." />
  	
  	  <echo message="Copy plugin to ${install} ..." />
  	  <copy file="build/${pluginname.file}" preservelastmodified="true" todir="${install}" />
  </target>
  
  <!--
   | Install plugin
   | Params:
   ${install-conf} - Path to install the plugin in.
   -->
   <target name="-install-crawler">  	  
  	  <echo message="Add to ${install-conf}/CrawlerConfiguration.xml..." />
   	  <available property="install.available" file="${install-conf}/CrawlerConfiguration.xml" />
   	  <fail unless="install.available" message="CrawlerConfiguration.xml could not be found." />

   	  <xmltask source="${install-conf}/CrawlerConfiguration.xml" dest="${install-conf}/CrawlerConfiguration.xml">
 		<copy path="configuration/startlist/start[1]/text()" buffer="startlist" />
 		<call path="configuration/crawlerAccessController/class">
 			<param name="class" path="text()" default="none" />
 			<actions>
 				<condition property="other-acl-present">
 					<not>
 						<equals arg1="@{class}" arg2="de.uni_siegen.wineme.come_in.acl.CrawlerAccessControllerImpl" />
 					</not>
 				</condition>
 				<fail if="other-acl-present" message="Could not modifiy CrawlerConfiguration.xml: A different CrawlerAccessController is already installed." />
 				<condition property="acl-present">
 					<equals arg1="@{class}" arg2="de.uni_siegen.wineme.come_in.acl.CrawlerAccessControllerImpl" />
 				</condition>
 				<!-- <echo> Found crawler plugin config: @{class}</echo> -->
 			</actions>
 		</call>
   	  	<insert path="configuration" unless="acl-present">
   	  	 <![CDATA[
<crawlerAccessController>
  <class jar="AccessController.jar">de.uni_siegen.wineme.come_in.acl.CrawlerAccessControllerImpl</class>
  <config>
    <param name="groupSeperator">,</param>
    <!-- Groups that are always added -->
    <param name="defaultGroups"> </param>
    <!-- Should be equal to start in startlist -->
    <param name="relativeFilenameBase">file:///path/to/dir</param>

    <param name="dbConnectionString">jdbc:postgresql://localhost/database</param>    
    <param name="dbUsername">username</param>
    <param name="dbPassword">password</param>
  </config>
</crawlerAccessController>  	   	  	 
		]]>
   	  	</insert>
   	  	<replace unless="acl-present" path="configuration/crawlerAccessController/config/param[@name='relativeFilenameBase']/text()" withBuffer="startlist"/>
	  </xmltask>
	  <!-- unless acl-present -->
	  <echo message="You'll need to adapt the database connection details in CrawlerConfiguration.xml" />
  </target>
  
  <target name="-install-search">
      <echo message="Add to ${install-conf}/SearchConfiguration.xml..." />
   	  <available property="install.available" file="${install-conf}/SearchConfiguration.xml" />
   	  <fail unless="install.available" message="SearchConfiguration.xml could not be found." />
   	  <xmltask source="${install-conf}/SearchConfiguration.xml" dest="${install-conf}/SearchConfiguration.xml">
 		<call path="configuration/indexList/defaultSettings/searchAccessController/class">
 			<param name="class" path="text()" default="none" />
 			<actions>
 				<condition property="other-sacl-present">
 					<not>
 						<equals arg1="@{class}" arg2="de.uni_siegen.wineme.come_in.acl.SearchAccessControllerImpl" />
 					</not>
 				</condition>
 				<fail if="other-sacl-present" message="Could not modifiy SearchConfiguration.xml: A different SearchAccessController is already installed: @{class}." />
 				<condition property="sacl-present">
 					<equals arg1="@{class}" arg2="de.uni_siegen.wineme.come_in.acl.SearchAccessControllerImpl" />
 				</condition>
 				<!-- <echo> Found crawler plugin config: @{class}</echo> -->
 			</actions>
 		</call>
   	  	<insert path="configuration/indexList/defaultSettings" unless="sacl-present">
   	  	 <![CDATA[
<searchAccessController>
    <class jar="AccessController.jar">de.uni_siegen.wineme.come_in.acl.SearchAccessControllerImpl</class>
    <config>
        <param name="groupSeperator">,</param>
        <param name="defaultGroups">public</param>
    </config>
</searchAccessController>	   	  	 
		]]>
   	  	</insert>
	  </xmltask>
  </target>
  
   <!-- 
    | Install to regain desktop version 
   -->
   <target name="deploy-desktop"> <!-- depends="package" -->
      <property name="desktop-install" value="${regain-location}/build/runtime/desktop/${platform}" />
      <echo message="Installing this plugin to ${desktop-install}..." />
   	  <available property="desktop-install.available" file="${desktop-install}/regain.jar" />
   	  <fail unless="desktop-install.available" message="Regain is not yet compiled. Call ant runtime-desktop." />

   	  <available property="conf.available" file="${desktop-install}/conf/DesktopConfiguration.xml" />
   	  <copy todir="${desktop-install}/conf" overwrite="false" granularity="5256000000">
   	  	<fileset dir="${desktop-install}/conf/default" />   	  
   	  </copy>
  
  	  <antcall target="-install-plugin">
  	  	<param name="install" value="${desktop-install}" />
  	  </antcall>
	  
	  <antcall target="-install-crawler">
  	  	<param name="install-conf" value="${desktop-install}/conf" />
	  </antcall>
	  
	  <antcall target="-install-search">
  	  	<param name="install-conf" value="${desktop-install}/conf" />
	  </antcall>
   </target>
   
   <target name="deploy-server"> <!-- depends="package" -->
   
      <property name="server-crawler" value="${regain-location}/build/runtime/crawler" />
      <echo message="Installing this plugin to ${server-crawler} ..." />
   	  <available property="crawler.available" file="${server-crawler}/regain-crawler.jar" />
   	  <fail unless="crawler.available" message="Regain is not yet compiled. Call ant runtime-crawler." />

  	  <antcall target="-install-plugin">
  	  	<param name="install" value="${server-crawler}" />
  	  </antcall>
  	  
  	  <antcall target="-install-crawler">
  	  	<param name="install-conf" value="${server-crawler}" />
	  </antcall>
  	  
  	  <property name="server-conf" value="${deploy-target.dir}/../conf/regain/" />
      <echo message="Installing this plugin to ${server-conf} ..." />
   	  <available property="server-conf.available" file="${server-conf}" />
   	  <fail unless="server-conf.available" message="Regain is not deployed on tomcat." />
  	  <antcall target="-install-plugin">
  	  	<param name="install" value="${server-conf}" />
  	  </antcall>
  	  
  	  <antcall target="-install-search">
  	  	<param name="install-conf" value="${server-conf}" />
	  </antcall>

   </target>
   
   <target name="deploy" depends="deploy-server,deploy-desktop">
   </target>
   
</project>
